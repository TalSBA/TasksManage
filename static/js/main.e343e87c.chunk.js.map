{"version":3,"sources":["Components/InputTask.js","Components/ModalMessage.js","Components/TasksList.js","Pages/Todos.js","App.js","index.js"],"names":["InputTask","onAddTask","useState","inputValue","setValue","Form","Control","type","placeholder","value","onChange","e","target","onKeyPress","charCode","trim","ModalMessage","show","onCloseModal","message","title","task","Modal","onHide","aria-labelledby","centered","Header","closeButton","Title","Body","Footer","Button","id","variant","onClick","TasksList","tasks","checkedChange","onDelete","className","map","index","FormControlLabel","status","checked","control","Checkbox","color","label","Todos","props","setTasks","filteredTasks","setFilteredTasks","activeCount","setActiveCount","allVariant","setAllVariant","activeVariant","setActiveVariant","completedVariant","setCompletedVariant","showModal","setShowModal","useEffect","count","forEach","ID","Math","random","toString","substr","setVariant","filterTasks","filter","deleteTask","newTasks","newFilteredTasks","Row","concat","isChecked","prevState","find","undefined","Badge","pill","res","App","Container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e343e87c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nfunction InputTask({onAddTask}) {\r\n  const [inputValue, setValue] = useState(\"\");\r\n\r\n  function onEnterPress(e){\r\n    if (e.charCode === 13 && e.target.value.trim()) {\r\n      onAddTask(e.target.value);\r\n      setValue(\"\");\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <Form.Control\r\n        type=\"text\"\r\n        placeholder=\"Add new task...\"\r\n        value={inputValue}\r\n        onChange={(e)=> setValue(e.target.value)}\r\n        onKeyPress={onEnterPress}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputTask;\r\n","import { Button, Modal } from \"react-bootstrap\";\r\n\r\nfunction ModalMessage({ show, onCloseModal, message, title, task }) {\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={(e) => onCloseModal(e, task)}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{message + \" \" + task.value + \"?\"}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button id=\"cancle\" variant=\"secondary\" onClick={(e) => onCloseModal(e, task)}>\r\n            Cancle\r\n          </Button>\r\n          <Button id=\"ok\" variant=\"primary\" onClick={(e) => onCloseModal(e, task)}>\r\n            Ok\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ModalMessage;\r\n","import { Checkbox, FormControlLabel } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"../Styles/Tasks.css\";\r\nimport { BsX } from \"react-icons/bs\";\r\n\r\nfunction TasksList({ tasks, checkedChange, onDelete }) {\r\n  return (\r\n    <div className=\"c-tasks\">\r\n      {tasks &&\r\n        tasks.map((task,index) => {\r\n          return (\r\n            <div key={index}>\r\n              <FormControlLabel\r\n                key={task.id}\r\n                className={`tasks ${\r\n                  task.status === \"completed\" ? \"completed\" : \"\"\r\n                }`}\r\n                checked={task.status === \"completed\" ? true : false}\r\n                control={\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    onChange={(e) => checkedChange(e.target.checked, task.id)}\r\n                  />\r\n                }\r\n                label={task.value}\r\n              />\r\n              <span\r\n                className=\"delete\"\r\n                id={task.id}\r\n                onClick={(e) => onDelete(e.target.id)}\r\n              >\r\n                x\r\n              </span>\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TasksList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Badge, Col, Row } from \"react-bootstrap\";\r\nimport InputTask from \"../Components/InputTask\";\r\nimport ModalMessage from \"../Components/ModalMessage\";\r\nimport TasksList from \"../Components/TasksList\";\r\nimport \"../Styles/Todos.css\";\r\n\r\nfunction Todos(props) {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [filteredTasks, setFilteredTasks] = useState([]);\r\n  const [activeCount, setActiveCount] = useState(0);\r\n  const [allVariant, setAllVariant] = useState(\"primary\");\r\n  const [activeVariant, setActiveVariant] = useState(\"\");\r\n  const [completedVariant, setCompletedVariant] = useState(\"\");\r\n  const [showModal, setShowModal] = useState({ show: false, task: {} });\r\n\r\n  useEffect(() => {\r\n    let count = 0;\r\n    filteredTasks.forEach((task) => {\r\n      if (task.status === \"active\") {\r\n        count++;\r\n      }\r\n    });\r\n    setActiveCount(count);\r\n  }, [filteredTasks]);\r\n\r\n  var ID = function () {\r\n    // Math.random should be unique because of its seeding algorithm.\r\n    // Convert it to base 36 (numbers + letters), and grab the first 9 characters\r\n    // after the decimal.\r\n    return \"_\" + Math.random().toString(36).substr(2, 9);\r\n  };\r\n  function addTask(task) {\r\n    setTasks(tasks.concat({ id: ID(), value: task, status: \"active\" }));\r\n    setFilteredTasks(\r\n      filteredTasks.concat({ id: ID(), value: task, status: \"active\" })\r\n    );\r\n  }\r\n  function updateTaskStatus(isChecked, id) {\r\n    setTasks((prevState) => {\r\n      let task = prevState.find((task) => id === task.id);\r\n      if (task !== undefined) {\r\n        if (isChecked) {\r\n          task.status = \"completed\";\r\n        } else {\r\n          task.status = \"active\";\r\n        }\r\n      }\r\n      return [...prevState];\r\n    });\r\n\r\n    setFilteredTasks((prevState) => {\r\n      let task = prevState.find((task) => id === task.id);\r\n      if (task !== undefined) {\r\n        if (isChecked) {\r\n          task.status = \"completed\";\r\n        } else {\r\n          task.status = \"active\";\r\n        }\r\n      }\r\n      return [...prevState];\r\n    });\r\n  }\r\n\r\n  function setVariant(value) {\r\n    let filterTasks;\r\n    if (value === \"all\") {\r\n      setAllVariant(\"primary\");\r\n      setActiveVariant(\"\");\r\n      setCompletedVariant(\"\");\r\n      filterTasks = tasks;\r\n    }\r\n    if (value === \"active\") {\r\n      setAllVariant(\"\");\r\n      setActiveVariant(\"primary\");\r\n      setCompletedVariant(\"\");\r\n      filterTasks = tasks.filter((task) => task.status === \"active\");\r\n    }\r\n    if (value === \"completed\") {\r\n      setAllVariant(\"\");\r\n      setActiveVariant(\"\");\r\n      setCompletedVariant(\"primary\");\r\n      filterTasks = tasks.filter((task) => task.status === \"completed\");\r\n    }\r\n    setFilteredTasks(filterTasks);\r\n  }\r\n  function handleDeleteClick(id) {\r\n    filteredTasks.forEach((task) => {\r\n      if (task.id === id) {\r\n        if (task.status === \"active\") {\r\n          setShowModal({ show: true, task: task });\r\n        } else {\r\n          deleteTask(id);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  function handleCloseModal(res, task) {\r\n    setShowModal({ show: false, task: {} });\r\n    if (res.target.id === \"ok\") {\r\n      deleteTask(task.id);\r\n    }\r\n  }\r\n\r\n  function deleteTask(id) {\r\n    const newTasks = tasks.filter((task) => task.id !== id);\r\n    setTasks(newTasks);\r\n\r\n    const newFilteredTasks = filteredTasks.filter((task) => task.id !== id);\r\n    setFilteredTasks(newFilteredTasks);\r\n  }\r\n  return (\r\n    <Row>\r\n      <div className=\"background\">\r\n        <div className=\"p-todos\">\r\n          <div className=\"input-list\">\r\n            <h1>Todos</h1>\r\n            <InputTask onAddTask={addTask} />\r\n            <TasksList\r\n              tasks={filteredTasks}\r\n              checkedChange={updateTaskStatus}\r\n              onDelete={handleDeleteClick}\r\n            />\r\n          </div>\r\n          <span className=\"bottom-lable\">{activeCount} items left</span>\r\n          <Badge pill variant={allVariant} onClick={() => setVariant(\"all\")}>\r\n            All\r\n          </Badge>\r\n          <Badge\r\n            pill\r\n            variant={activeVariant}\r\n            onClick={() => setVariant(\"active\")}\r\n          >\r\n            Active\r\n          </Badge>\r\n          <Badge\r\n            pill\r\n            variant={completedVariant}\r\n            onClick={() => setVariant(\"completed\")}\r\n          >\r\n            Completed\r\n          </Badge>\r\n          <ModalMessage\r\n            show={showModal.show}\r\n            onCloseModal={handleCloseModal}\r\n            message=\"Are you sure you want to delete an active item :\"\r\n            title=\"Confirm Deletion\"\r\n            task={showModal.task}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default Todos;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Todos from \"./Pages/Todos\";\r\nimport \"./Styles/App.css\";\r\n\r\n\r\nfunction App(props) {\r\n  return (\r\n    <Container className=\"container\">\r\n      <Todos />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Styles/index.css\";\nimport App from \"./App\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}