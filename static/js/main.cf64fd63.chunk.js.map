{"version":3,"sources":["Components/InputTask.js","Components/ModalMessage.js","Components/TasksList.js","Pages/Todos.js","App.js","index.js"],"names":["InputTask","onAddTask","useState","inputValue","setValue","className","Form","Control","type","placeholder","value","onChange","e","target","onKeyPress","charCode","trim","ModalMessage","show","onCloseModal","message","title","task","Modal","onHide","aria-labelledby","centered","Header","closeButton","Title","Body","Footer","Button","id","variant","onClick","TasksList","tasks","checkedChange","onDelete","map","index","FormControlLabel","status","checked","control","Checkbox","color","label","Todos","props","todosList","setTasks","activeCount","setActiveCount","setVariant","showModal","setShowModal","deleteTask","newTasks","filter","useEffect","count","forEach","Container","Row","concat","Math","random","toString","substr","isChecked","prevState","find","undefined","Badge","pill","res","App","ReactDOM","render","document","getElementById"],"mappings":"mSA0BeA,MAtBf,YAAiC,IAAbC,EAAY,EAAZA,UAClB,EAA+BC,mBAAS,IAAxC,mBAAOC,EAAP,KAAmBC,EAAnB,KAQA,OACE,qBAAKC,UAAU,UAAf,SACE,cAACC,EAAA,EAAKC,QAAN,CACEC,KAAK,OACLC,YAAY,kBACZC,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAAMR,EAASQ,EAAEC,OAAOH,QAClCI,WAbN,SAAsBF,GACD,KAAfA,EAAEG,UAAmBH,EAAEC,OAAOH,MAAMM,SACtCf,EAAUW,EAAEC,OAAOH,OACnBN,EAAS,W,gBCkBAa,MA1Bf,YAAqE,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,KAC1D,OACE,mCACE,eAACC,EAAA,EAAD,CACEL,KAAMA,EACNM,OAAQ,SAACZ,GAAD,OAAOO,EAAaP,EAAGU,IAC/BG,kBAAgB,gCAChBC,UAAQ,EAJV,UAME,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,EAAA,EAAMM,MAAP,UAAcR,MAEhB,cAACE,EAAA,EAAMO,KAAP,UAAaV,EAAU,IAAME,EAAKZ,MAAQ,MAC1C,eAACa,EAAA,EAAMQ,OAAP,WACE,cAACC,EAAA,EAAD,CAAQC,GAAG,SAASC,QAAQ,YAAYC,QAAS,SAACvB,GAAD,OAAOO,EAAaP,EAAGU,IAAxE,oBAGA,cAACU,EAAA,EAAD,CAAQC,GAAG,KAAKC,QAAQ,UAAUC,QAAS,SAACvB,GAAD,OAAOO,EAAaP,EAAGU,IAAlE,yB,sBCqBKc,MAnCf,YAAwD,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,cAAeC,EAAY,EAAZA,SACzC,OACE,qBAAKlC,UAAU,UAAf,SACGgC,GACCA,EAAMG,KAAI,SAAClB,EAAMmB,GACf,OACE,gCACE,cAACC,EAAA,EAAD,CAEErC,UAAS,gBACS,cAAhBiB,EAAKqB,OAAyB,YAAc,IAE9CC,QAAyB,cAAhBtB,EAAKqB,OACdE,QACE,cAACC,EAAA,EAAD,CACEC,MAAM,UACNpC,SAAU,SAACC,GAAD,OAAO0B,EAAc1B,EAAEC,OAAO+B,QAAStB,EAAKW,OAG1De,MAAO1B,EAAKZ,OAXPY,EAAKW,IAaZ,sBACE5B,UAAU,SACV4B,GAAIX,EAAKW,GACTE,QAAS,SAACvB,GAAD,OAAO2B,EAAS3B,EAAEC,OAAOoB,KAHpC,iBAfQQ,S,MCqHPQ,MAzHf,SAAeC,GACb,IA8DIC,EA9DJ,EAA0BjD,mBAAS,IAAnC,mBAAOmC,EAAP,KAAce,EAAd,KACA,EAAsClD,mBAAS,GAA/C,mBAAOmD,EAAP,KAAoBC,EAApB,KACA,EAA8BpD,mBAAS,OAAvC,mBAAOgC,EAAP,KAAgBqB,EAAhB,KACA,EAAkCrD,mBAAS,CAAEgB,MAAM,EAAOI,KAAM,KAAhE,mBAAOkC,EAAP,KAAkBC,EAAlB,KAsDA,SAASC,EAAWzB,GAClB,IAAM0B,EAAWtB,EAAMuB,QAAO,SAACtC,GAAD,OAAUA,EAAKW,KAAOA,KACpDmB,EAASO,GASX,OA/DAE,qBAAU,WACR,IAAIC,EAAQ,EACZzB,EAAM0B,SAAQ,SAACzC,GACO,WAAhBA,EAAKqB,QACPmB,OAGJR,EAAeQ,KACd,CAACzB,IAkDAA,IACFc,EAAYd,EAAMuB,QAAO,SAACtC,GACxB,MAAmB,QAAZY,EAAoBZ,EAAOA,EAAKqB,SAAWT,MAIpD,cAAC8B,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAK5D,UAAU,4BAAf,SACE,qBAAKA,UAAU,aAAf,SACE,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,aAAf,UACE,uCACA,cAAC,EAAD,CAAWJ,UAtDvB,SAAiBqB,GACf8B,EAASf,EAAM6B,OAAO,CAAEjC,GAHjB,IAAMkC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,GAGhB5D,MAAOY,EAAMqB,OAAQ,eAsD7C,cAAC,EAAD,CACEN,MAAOc,EACPb,cAtDd,SAA0BiC,EAAWtC,GACnCmB,GAAS,SAACoB,GACR,IAAIlD,EAAOkD,EAAUC,MAAK,SAACnD,GAAD,OAAUW,IAAOX,EAAKW,MAQhD,YAPayC,IAATpD,IAEAA,EAAKqB,OADH4B,EACY,YAEA,UAGX,YAAIC,OA6CDjC,SAzCd,SAA2BN,GACzBI,EAAM0B,SAAQ,SAACzC,GACTA,EAAKW,KAAOA,IACM,WAAhBX,EAAKqB,OACPc,EAAa,CAAEvC,MAAM,EAAMI,KAAMA,IAEjCoC,EAAWzB,aAsCT,uBAAM5B,UAAU,eAAhB,UAAgCgD,EAAhC,iBACA,sBAAKhD,UAAU,UAAf,UACE,cAACsE,EAAA,EAAD,CACEC,MAAI,EACJ1C,QAAqB,QAAZA,EAAoB,UAAY,GACzCC,QAAS,kBAAMoB,EAAW,QAH5B,iBAOA,cAACoB,EAAA,EAAD,CACEC,MAAI,EACJ1C,QAAqB,WAAZA,EAAuB,UAAY,GAC5CC,QAAS,kBAAMoB,EAAW,WAH5B,oBAOA,cAACoB,EAAA,EAAD,CACEC,MAAI,EACJ1C,QAAqB,cAAZA,EAA0B,UAAY,GAC/CC,QAAS,kBAAMoB,EAAW,cAH5B,0BAQF,cAAC,EAAD,CACErC,KAAMsC,EAAUtC,KAChBC,aA1DZ,SAA0B0D,EAAKvD,GAC7BmC,EAAa,CAAEvC,MAAM,EAAOI,KAAM,KACZ,OAAlBuD,EAAIhE,OAAOoB,IACbyB,EAAWpC,EAAKW,KAwDRb,QAAQ,mDACRC,MAAM,mBACNC,KAAMkC,EAAUlC,iB,MCzGfwD,MARf,SAAa5B,GACX,OACE,cAACc,EAAA,EAAD,CAAW3D,UAAU,YAArB,SACE,cAAC,EAAD,O,MCHN0E,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.cf64fd63.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\n\r\nfunction InputTask({onAddTask}) {\r\n  const [inputValue, setValue] = useState(\"\");\r\n\r\n  function onEnterPress(e){\r\n    if (e.charCode === 13 && e.target.value.trim()) {\r\n      onAddTask(e.target.value);\r\n      setValue(\"\");\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"c-input\">\r\n      <Form.Control\r\n        type=\"text\"\r\n        placeholder=\"Add new task...\"\r\n        value={inputValue}\r\n        onChange={(e)=> setValue(e.target.value)}\r\n        onKeyPress={onEnterPress}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputTask;\r\n","import { Button, Modal } from \"react-bootstrap\";\r\n\r\nfunction ModalMessage({ show, onCloseModal, message, title, task }) {\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={(e) => onCloseModal(e, task)}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{message + \" \" + task.value + \"?\"}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button id=\"cancle\" variant=\"secondary\" onClick={(e) => onCloseModal(e, task)}>\r\n            Cancle\r\n          </Button>\r\n          <Button id=\"ok\" variant=\"primary\" onClick={(e) => onCloseModal(e, task)}>\r\n            Ok\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ModalMessage;\r\n","import { Checkbox, FormControlLabel } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"../Styles/Tasks.css\";\r\nimport { BsX } from \"react-icons/bs\";\r\n\r\nfunction TasksList({ tasks, checkedChange, onDelete }) {\r\n  return (\r\n    <div className=\"c-tasks\">\r\n      {tasks &&\r\n        tasks.map((task, index) => {\r\n          return (\r\n            <div key={index}>\r\n              <FormControlLabel\r\n                key={task.id}\r\n                className={`tasks ${\r\n                  task.status === \"completed\" ? \"completed\" : \"\"\r\n                }`}\r\n                checked={task.status === \"completed\" ? true : false}\r\n                control={\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    onChange={(e) => checkedChange(e.target.checked, task.id)}\r\n                  />\r\n                }\r\n                label={task.value}\r\n              />\r\n              <span\r\n                className=\"delete\"\r\n                id={task.id}\r\n                onClick={(e) => onDelete(e.target.id)}\r\n              >\r\n                x\r\n              </span>\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TasksList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Badge, Col, Container, Row } from \"react-bootstrap\";\r\nimport InputTask from \"../Components/InputTask\";\r\nimport ModalMessage from \"../Components/ModalMessage\";\r\nimport TasksList from \"../Components/TasksList\";\r\nimport \"../Styles/Todos.css\";\r\n\r\nfunction Todos(props) {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [activeCount, setActiveCount] = useState(0);\r\n  const [variant, setVariant] = useState(\"all\");\r\n  const [showModal, setShowModal] = useState({ show: false, task: {} });\r\n\r\n  useEffect(() => {\r\n    let count = 0;\r\n    tasks.forEach((task) => {\r\n      if (task.status === \"active\") {\r\n        count++;\r\n      }\r\n    });\r\n    setActiveCount(count);\r\n  }, [tasks]);\r\n\r\n  var ID = function () {\r\n    // Math.random should be unique because of its seeding algorithm.\r\n    // Convert it to base 36 (numbers + letters), and grab the first 9 characters\r\n    // after the decimal.\r\n    return \"_\" + Math.random().toString(36).substr(2, 9);\r\n  };\r\n  function addTask(task) {\r\n    setTasks(tasks.concat({ id: ID(), value: task, status: \"active\" }));\r\n  }\r\n  function updateTaskStatus(isChecked, id) {\r\n    setTasks((prevState) => {\r\n      let task = prevState.find((task) => id === task.id);\r\n      if (task !== undefined) {\r\n        if (isChecked) {\r\n          task.status = \"completed\";\r\n        } else {\r\n          task.status = \"active\";\r\n        }\r\n      }\r\n      return [...prevState];\r\n    });\r\n  }\r\n\r\n  function handleDeleteClick(id) {\r\n    tasks.forEach((task) => {\r\n      if (task.id === id) {\r\n        if (task.status === \"active\") {\r\n          setShowModal({ show: true, task: task });\r\n        } else {\r\n          deleteTask(id);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  function handleCloseModal(res, task) {\r\n    setShowModal({ show: false, task: {} });\r\n    if (res.target.id === \"ok\") {\r\n      deleteTask(task.id);\r\n    }\r\n  }\r\n\r\n  function deleteTask(id) {\r\n    const newTasks = tasks.filter((task) => task.id !== id);\r\n    setTasks(newTasks);\r\n  }\r\n\r\n  let todosList;\r\n  if (tasks) {\r\n    todosList = tasks.filter((task) => {\r\n      return variant === \"all\" ? task : task.status === variant;\r\n    });\r\n  }\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <div className=\"background\">\r\n          <div className=\"p-todos\">\r\n            <div className=\"input-list\">\r\n              <h1>Todos</h1>\r\n              <InputTask onAddTask={addTask} />\r\n              <TasksList\r\n                tasks={todosList}\r\n                checkedChange={updateTaskStatus}\r\n                onDelete={handleDeleteClick}\r\n              />\r\n            </div>\r\n            <span className=\"bottom-lable\">{activeCount} items left</span>\r\n            <div className=\"filters\">\r\n              <Badge\r\n                pill\r\n                variant={variant === \"all\" ? \"primary\" : \"\"}\r\n                onClick={() => setVariant(\"all\")}\r\n              >\r\n                All\r\n              </Badge>\r\n              <Badge\r\n                pill\r\n                variant={variant === \"active\" ? \"primary\" : \"\"}\r\n                onClick={() => setVariant(\"active\")}\r\n              >\r\n                Active\r\n              </Badge>\r\n              <Badge\r\n                pill\r\n                variant={variant === \"completed\" ? \"primary\" : \"\"}\r\n                onClick={() => setVariant(\"completed\")}\r\n              >\r\n                Completed\r\n              </Badge>\r\n            </div>\r\n            <ModalMessage\r\n              show={showModal.show}\r\n              onCloseModal={handleCloseModal}\r\n              message=\"Are you sure you want to delete an active item :\"\r\n              title=\"Confirm Deletion\"\r\n              task={showModal.task}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Todos;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Todos from \"./Pages/Todos\";\r\nimport \"./Styles/App.css\";\r\n\r\n\r\nfunction App(props) {\r\n  return (\r\n    <Container className=\"container\">\r\n      <Todos />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Styles/index.css\";\nimport App from \"./App\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}